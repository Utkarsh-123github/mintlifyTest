openapi: 3.0.0
info:
  title: Utkarsh Game-Verse API
  description: REST API for Game-Verse, a gaming platform with puzzle, FPS, and racing genres. This specification supports various business cases including studio onboarding, player management, match handling, leaderboard generation, achievements, and platform security.
  version: 1.0.0

servers:
  - url: https://stoplight.io/mocks/utkarshgameverse/gameverse/9113306/
    description: Mock Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        status:
          type: integer
      example:
        error: "VALIDATION_ERROR"
        message: "Invalid request format"
        status: 400

    Player:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
      example:
        id: 1001
        username: "player_phoenix"
        email: "phoenix@example.com"
        created_at: "2024-01-15T10:30:00Z"

    Studio:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        name:
          type: string
        description:
          type: string
      example:
        id: 501
        email: "contact@pixelcraft.com"
        name: "PixelCraft Studios"
        description: "Independent game studio specializing in puzzle and adventure games"

    Game:
      type: object
      required: [title, genre, studio_id]
      properties:
        id:
          type: integer
        title:
          type: string
        genre:
          type: string
          enum: [puzzle, fps, racing]
        studio_id:
          type: integer
        description:
          type: string
        release_date:
          type: string
          format: date
      example:
        id: 2001
        title: "Mystery Maze Adventure"
        genre: "puzzle"
        studio_id: 501
        description: "A challenging puzzle game featuring intricate mazes and mind-bending puzzles"
        release_date: "2024-03-15"

    Match:
      type: object
      properties:
        id:
          type: integer
        game_id:
          type: integer
        players:
          type: array
          items:
            type: integer
        result:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time
      example:
        id: 3001
        game_id: 2001
        players: [1001, 1002, 1003]
        result:
          winner: 1001
          scores:
            "1001": 2500
            "1002": 1800
            "1003": 1200
          duration: 420
        timestamp: "2024-07-11T14:30:00Z"

    Achievement:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
      example:
        id: 4001
        name: "Puzzle Master"
        description: "Complete 100 puzzle games with perfect score"

    LeaderboardEntry:
      type: object
      properties:
        player_id:
          type: integer
        player_name:
          type: string
        score:
          type: integer
        rank:
          type: integer
      example:
        player_id: 1001
        player_name: "player_phoenix"
        score: 15420
        rank: 1

    UpdatePlayer:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
      required:
        - username
        - email
      example:
        username: "player_phoenix_updated"
        email: "phoenix.updated@example.com"

  responses:
    Unauthorized:
      description: Unauthorized - JWT missing or invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "UNAUTHORIZED"
            message: "JWT token missing or invalid"
            status: 401
    Forbidden:
      description: Forbidden - access denied
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "FORBIDDEN"
            message: "Access denied - insufficient permissions"
            status: 403
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "NOT_FOUND"
            message: "Resource not found"
            status: 404
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "BAD_REQUEST"
            message: "Invalid input data"
            status: 400
    TooManyRequests:
      description: Rate limit exceeded
      headers:
        Retry-After:
          description: Time in seconds to wait before retrying
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "RATE_LIMIT_EXCEEDED"
            message: "Too many requests, please try again later"
            status: 429
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            error: "INTERNAL_SERVER_ERROR"
            message: "An unexpected error occurred"
            status: 500

paths:
  /players:
    post:
      summary: Register a new player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Player"
            example:
              username: "player_phoenix"
              email: "phoenix@example.com"
      responses:
        "201":
          description: Player created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
              example:
                id: 1001
                username: "player_phoenix"
                email: "phoenix@example.com"
                created_at: "2024-07-11T14:30:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "429":
          $ref: "#/components/responses/TooManyRequests"
        "500":
          $ref: "#/components/responses/InternalError"

  /players/{id}:
    get:
      summary: Get player profile
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1001
      responses:
        "200":
          description: Player info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
              example:
                id: 1001
                username: "player_phoenix"
                email: "phoenix@example.com"
                created_at: "2024-01-15T10:30:00Z"
        "404":
          $ref: "#/components/responses/NotFound"
        "429":
          $ref: "#/components/responses/TooManyRequests"

    put:
      summary: Update player profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1001
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePlayer"
            example:
              username: "player_phoenix_updated"
              email: "phoenix.updated@example.com"
      responses:
        "200":
          description: Player updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
              example:
                id: 1001
                username: "player_phoenix_updated"
                email: "phoenix.updated@example.com"
                created_at: "2024-01-15T10:30:00Z"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

    delete:
      summary: Delete player account
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1001
      responses:
        "204":
          description: Player deleted
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  /games:
    get:
      summary: List all games
      parameters:
        - in: query
          name: genre
          schema:
            type: string
          example: "puzzle"
        - in: query
          name: studio_id
          schema:
            type: integer
          example: 501
        - in: query
          name: sort
          schema:
            type: string
          example: "release_date"
        - in: query
          name: page
          schema:
            type: integer
          example: 1
        - in: query
          name: pageSize
          schema:
            type: integer
          example: 10
      responses:
        "200":
          description: List of games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Game"
              example:
                - id: 2001
                  title: "Mystery Maze Adventure"
                  genre: "puzzle"
                  studio_id: 501
                  description: "A challenging puzzle game featuring intricate mazes and mind-bending puzzles"
                  release_date: "2024-03-15"
                - id: 2002
                  title: "Speed Demon Racing"
                  genre: "racing"
                  studio_id: 502
                  description: "High-octane racing game with customizable vehicles"
                  release_date: "2024-05-20"
        "429":
          $ref: "#/components/responses/TooManyRequests"

    post:
      summary: Publish a new game
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
            example:
              title: "Cyber Warfare Elite"
              genre: "fps"
              studio_id: 503
              description: "Futuristic first-person shooter with advanced AI enemies"
              release_date: "2024-08-01"
      responses:
        "201":
          description: Game created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
              example:
                id: 2003
                title: "Cyber Warfare Elite"
                genre: "fps"
                studio_id: 503
                description: "Futuristic first-person shooter with advanced AI enemies"
                release_date: "2024-08-01"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /games/{id}:
    get:
      summary: Get game details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 2001
      responses:
        "200":
          description: Game details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
              example:
                id: 2001
                title: "Mystery Maze Adventure"
                genre: "puzzle"
                studio_id: 501
                description: "A challenging puzzle game featuring intricate mazes and mind-bending puzzles"
                release_date: "2024-03-15"
        "404":
          $ref: "#/components/responses/NotFound"

    put:
      summary: Update game info
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 2001
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Game"
            example:
              title: "Mystery Maze Adventure Deluxe"
              genre: "puzzle"
              studio_id: 501
              description: "Enhanced version with new levels and improved graphics"
              release_date: "2024-03-15"
      responses:
        "200":
          description: Game updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Game"
              example:
                id: 2001
                title: "Mystery Maze Adventure Deluxe"
                genre: "puzzle"
                studio_id: 501
                description: "Enhanced version with new levels and improved graphics"
                release_date: "2024-03-15"
        "404":
          $ref: "#/components/responses/NotFound"

    delete:
      summary: Delete a game
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 2001
      responses:
        "204":
          description: Game deleted
        "404":
          $ref: "#/components/responses/NotFound"

  /matches:
    post:
      summary: Create a new match
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Match"
            example:
              game_id: 2001
              players: [1001, 1002, 1003]
      responses:
        "201":
          description: Match created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
              example:
                id: 3001
                game_id: 2001
                players: [1001, 1002, 1003]
                result: null
                timestamp: "2024-07-11T14:30:00Z"

  /matches/{id}:
    get:
      summary: Get match details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 3001
      responses:
        "200":
          description: Match info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
              example:
                id: 3001
                game_id: 2001
                players: [1001, 1002, 1003]
                result:
                  winner: 1001
                  scores:
                    "1001": 2500
                    "1002": 1800
                    "1003": 1200
                  duration: 420
                timestamp: "2024-07-11T14:30:00Z"
        "404":
          $ref: "#/components/responses/NotFound"

    put:
      summary: Submit match results
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 3001
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                result:
                  type: object
                  additionalProperties: true
            example:
              result:
                winner: 1001
                scores:
                  "1001": 2500
                  "1002": 1800
                  "1003": 1200
                duration: 420
      responses:
        "200":
          description: Match result submitted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
              example:
                id: 3001
                game_id: 2001
                players: [1001, 1002, 1003]
                result:
                  winner: 1001
                  scores:
                    "1001": 2500
                    "1002": 1800
                    "1003": 1200
                  duration: 420
                timestamp: "2024-07-11T14:30:00Z"

  /leaderboards:
    get:
      summary: Get current season leaderboard
      responses:
        "200":
          description: Leaderboard data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeaderboardEntry"
              example:
                - player_id: 1001
                  player_name: "player_phoenix"
                  score: 15420
                  rank: 1
                - player_id: 1002
                  player_name: "puzzle_master"
                  score: 14200
                  rank: 2
                - player_id: 1003
                  player_name: "speed_demon"
                  score: 13800
                  rank: 3

  /leaderboards/{season}:
    get:
      summary: Get leaderboard for a season
      parameters:
        - in: path
          name: season
          required: true
          schema:
            type: string
          example: "2024-spring"
      responses:
        "200":
          description: Leaderboard data for the season
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LeaderboardEntry"
              example:
                - player_id: 1005
                  player_name: "spring_champion"
                  score: 18900
                  rank: 1
                - player_id: 1001
                  player_name: "player_phoenix"
                  score: 17500
                  rank: 2
                - player_id: 1007
                  player_name: "maze_runner"
                  score: 16200
                  rank: 3

  /achievements:
    get:
      summary: List all achievements
      responses:
        "200":
          description: Achievements list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Achievement"
              example:
                - id: 4001
                  name: "Puzzle Master"
                  description: "Complete 100 puzzle games with perfect score"
                - id: 4002
                  name: "Speed Racer"
                  description: "Win 50 racing competitions"
                - id: 4003
                  name: "Sharpshooter"
                  description: "Achieve 95% accuracy in FPS games"
                - id: 4004
                  name: "First Victory"
                  description: "Win your first match"

  /players/{id}/achievements:
    get:
      summary: Get player achievements
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 1001
      responses:
        "200":
          description: Player achievements
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Achievement"
              example:
                - id: 4001
                  name: "Puzzle Master"
                  description: "Complete 100 puzzle games with perfect score"
                - id: 4004
                  name: "First Victory"
                  description: "Win your first match"
                - id: 4005
                  name: "Veteran Player"
                  description: "Play for 6 months consistently"

  /studios:
    post:
      summary: Register a studio
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Studio"
            example:
              email: "contact@nextstudios.com"
              name: "NextGen Studios"
              description: "Innovative game development studio focusing on next-generation gaming experiences"
      responses:
        "201":
          description: Studio created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Studio"
              example:
                id: 504
                email: "contact@nextstudios.com"
                name: "NextGen Studios"
                description: "Innovative game development studio focusing on next-generation gaming experiences"

  /studios/{id}:
    get:
      summary: Get studio info
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 501
      responses:
        "200":
          description: Studio details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Studio"
              example:
                id: 501
                email: "contact@pixelcraft.com"
                name: "PixelCraft Studios"
                description: "Independent game studio specializing in puzzle and adventure games"

    delete:
      summary: Delete a studio
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 501
      responses:
        "204":
          description: Studio deleted successfully

  /studios/{id}/games:
    get:
      summary: List games published by studio
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 501
      responses:
        "200":
          description: Games by studio
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Game"
              example:
                - id: 2001
                  title: "Mystery Maze Adventure"
                  genre: "puzzle"
                  studio_id: 501
                  description: "A challenging puzzle game featuring intricate mazes and mind-bending puzzles"
                  release_date: "2024-03-15"
                - id: 2004
                  title: "Brain Teaser Collection"
                  genre: "puzzle"
                  studio_id: 501
                  description: "Collection of classic brain teasers and logic puzzles"
                  release_date: "2024-06-01"

  /studios/{id}/games/{gameId}:
    delete:
      summary: Delete a specific game by studio
      description: Allows a studio to delete a specific game they published.
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          example: 501
        - in: path
          name: gameId
          required: true
          schema:
            type: integer
          example: 2001
      responses:
        "204":
          description: Game deleted successfully by Studio
